#!/usr/bin/expect
# Drives Copilot CLI forever: seeds the session, nudges on idle, advances on RALPH_NEXT.

# --- config ---
set timeout 120              ;# seconds of inactivity before we poke with /continue
set prompt_boot "Read PROMPT.md and load it as your permanent memory and control prompt for this session. Use the Iteration template from PROMPT.md. Do not wait for approvals. Apply diffs and run your own commands. Always update ADRs/README/CHANGELOG and tests. Create a TODO.md file to track current tasks and a ROADMAP.md for long-term planning. When you finish an iteration, print the line: RALPH_NEXT"

# --- start copilot ---
log_user 1

# Disable output buffering and set binary mode
fconfigure stdout -buffering none

spawn copilot --allow-all-tools

# Wait for the initial prompt (adjust this pattern based on what you see)
expect {
    -re "(>|\\$|#|copilot)" { 
        # Found prompt
    }
    timeout { 
        puts "ERROR: Timeout waiting for copilot prompt"
        exit 1 
    }
}

# Give it a moment to fully initialize
sleep 3

# seed the session - try multiple methods to send Enter
send -- "$prompt_boot"
sleep 0.5
send -- "\n"

# loop forever
while {1} {
    expect {
        -re "RALPH_NEXT" {
            # tell it to immediately begin the next iteration
            sleep 2
            send -- "Begin the NEXT iteration using the template. Focus on the highest-value increment, keep changes small, and proceed without asking. Remember to end with: RALPH_NEXT"
            sleep 0.5
            send -- "\n"
        }
        timeout {
            # nudge on silence
            send -- "/continue"
            sleep 0.5
            send -- "\n"
        }
        eof {
            # copilot exited; restart after a short pause
            puts "Copilot exited, restarting in 5 seconds..."
            sleep 5
            spawn copilot --allow-all-tools
            expect -re "(>|\\$|#|copilot)"
            sleep 3
            send -- "Resume from current repo state. Read PROMPT.md as your control prompt. Check TODO.md for current tasks. Continue the iteration loop and end with RALPH_NEXT."
            sleep 0.5
            send -- "\n"
        }
    }
}
